webpackJsonp([53],{1747:function(n,a){n.exports={content:["article",{},["h2","Basic Structure"],["p","The scaffold has built up the basic framework of routes and menus by combining some configuration files, basic algorithms and tool functions, which mainly contains the following modules/functions:"],["ul",["li",["p",["code","Routes Building"]," By combining configuration files and preset algorithms, we provide the ability to generate routes lists in files of different levels automatically."]],["li",["p",["code","Menus Building"]," It is built through a menu configuration file which has a determined data structure, the title of the menu item and the nested path has a certain relationship with the route."]],["li",["p",["code","Breadcrumb"]," The breadcrumb in ",["a",{title:null,href:"http://pro.ant.design/components/PageHeader"},"PageHeader"]," can be generated by the configuration files in the scaffold."]]],["p","Below is a brief introduction to the basic ideas of each module, if you are not interested in the design principle, you can jump to ",["a",{title:null,href:"/docs/router-and-nav#Examples"},"Examples"]," directly to find out how to meet your needs."],["h3","Routes"],["p","The routes list is generated automatically in our scaffold(except ",["a",{title:null,href:"https://github.com/ant-design/ant-design-pro/blob/master/src/router.js"},"root routes"],"). The configuration file ",["code","src/common/router.js"]," is the most critical part, which has two main functions:"],["ul",["li",["p","Configuring routing related info. You just need to specify the path and component for each item(if you only want to build a routes list)."]],["li",["p","Output the routerData, and mount it on the components corresponding to each route."]]],["p","Now we get a basic routes info object, the structure is generally like this:"],["pre",{lang:"js",highlighted:'<span class="token punctuation">{</span>\n  <span class="token string">\'/dashboard/analysis\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    component<span class="token punctuation">:</span> <span class="token function">DynamicComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Analysis\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string">\'/dashboard/monitor\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    component<span class="token punctuation">:</span> <span class="token function">DynamicComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Monitor\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string">\'/dashboard/workplace\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    component<span class="token punctuation">:</span> <span class="token function">DynamicComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Workplace\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>'},["code","{\n  '/dashboard/analysis': {\n    component: DynamicComponent(),\n    name: 'Analysis',\n  },\n  '/dashboard/monitor': {\n    component: DynamicComponent(),\n    name: 'Monitor',\n  },\n  '/dashboard/workplace': {\n    component: DynamicComponent(),\n    name: 'Workplace',\n  },\n}"]],["p","We provide a tool function ",["code","getRoutes"]," in ",["code","src/utils/utils.js"]," to help routes building, which accepts two params: current ",["a",{title:null,href:"https://reacttraining.com/react-router/web/api/match"},"match"]," and routerData, the main purpose of ",["code","getRoutes"]," is:"],["ul",["li",["p","To filter the routes info. The algorithm is: ",["strong","Only keep the nearest routing level under the current match.path(We defaults that the deeper layers need to be left to nested rendering in subcomponents)"],". For example:"],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// current match.path is /</span>\n<span class="token operator">/</span>a                 <span class="token comment" spellcheck="true">// no nearer level, preserve</span>\n<span class="token operator">/</span>a<span class="token operator">/</span>b               <span class="token comment" spellcheck="true">// a nearer level /a exists, remove</span>\n<span class="token operator">/</span>c<span class="token operator">/</span>d               <span class="token comment" spellcheck="true">// no nearer level, preserve</span>\n<span class="token operator">/</span>c<span class="token operator">/</span>e               <span class="token comment" spellcheck="true">// no nearer level, preserve</span>\n<span class="token operator">/</span>c<span class="token operator">/</span>e<span class="token operator">/</span>f             <span class="token comment" spellcheck="true">// a nearer level /c/e exists, remove</span>'},["code","// current match.path is /\n/a                 // no nearer level, preserve\n/a/b               // a nearer level /a exists, remove\n/c/d               // no nearer level, preserve\n/c/e               // no nearer level, preserve\n/c/e/f             // a nearer level /c/e exists, remove"]]],["li",["p","To analysis the ",["a",{title:null,href:"https://reacttraining.com/react-router/web/api/Route/exact-bool"},"exact"]," param. The route path will be set exact unless it has nested paths."]]],["p","Now we can build our routes list:"],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/layouts/BasicLayout.js</span>\n<span class="token function">getRoutes</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>path<span class="token punctuation">,</span> routerData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Route\n    key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>key<span class="token punctuation">}</span>\n    path<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path<span class="token punctuation">}</span>\n    component<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>component<span class="token punctuation">}</span>\n    exact<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>exact<span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span>'},["code","// src/layouts/BasicLayout.js\ngetRoutes(match.path, routerData).map(item => (\n  <Route\n    key={item.key}\n    path={item.path}\n    component={item.component}\n    exact={item.exact}\n  />\n))"]],["blockquote",["p","Note: If you do not need the filtering and analysis function, you can ignore ",["code","getRoutes"]," and build your routes list based on routerData."]],["h3","Menus"],["p","The menu info is configured in ",["code","src/common/menu.js"],", its role is:"],["ul",["li",["p","To organize the menu data, ",["strong","the generated link for the menu item is the path combination of the item self and its parents."]]],["li",["p","To provide page name for routes in ",["code","src/common/router.js"],", ",["strong","we use the generated link to match the corresponding route."]]]],["blockquote",["p","You can specify the name info in ",["code","src/common/router.js"]," directly if you do not need a menu in your project."]],["p","The output data of ",["code","src/common/menu.js"]," can be used directly by ",["a",{title:null,href:"https://github.com/ant-design/ant-design-pro/blob/master/src/components/SiderMenu/SiderMenu.js"},"SiderMenu"]," components, besides that, it can also assist in redirect routes building, refer to ",["a",{title:null,href:"https://github.com/ant-design/ant-design-pro/blob/master/src/layouts/BasicLayout.js#L154"},"BasicLayout.js#L154"],"."],["h3","Breadcrumb"],["p","The routerData can be used by PageHeader to build a breadcrumb, props or context are both support, ",["a",{title:null,href:"https://github.com/ant-design/ant-design-pro/blob/master/src/layouts/BasicLayout.js#L76"},"examples"],"."],["h2","Examples"],["p","Let's find out how to do through some cases."],["h3","New Pages"],["p","There are two kinds of layout template: ",["code","BasicLayout"]," and ",["code","UserLayout"],"."],["p",["img",{alt:"BasicLayout",src:"https://gw.alipayobjects.com/zos/rmsportal/oXmyfmffJVvdbmDoGvuF.png"}]],["p",["img",{alt:"UserLayout",src:"https://gw.alipayobjects.com/zos/rmsportal/mXsydBXvLqBVEZLMssEy.png"}]],["p","You just need to add one item in the routes/menus configuration file if your pages can be based on these templates:"],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/router.js</span>\n<span class="token string">\'/dashboard/test\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'monitor\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/Dashboard/Test\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>'},["code","// src/common/router.js\n'/dashboard/test': {\n  component: dynamicWrapper(app, ['monitor'], () => import('../routes/Dashboard/Test')),\n},"]],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/menu.js</span>\n<span class="token keyword">const</span> menuData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  icon<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// https://demo.com/icon.png or &lt;Icon type="dashboard" /></span>\n  path<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Analysis\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'analysis\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Monitor\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'monitor\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Workplace\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'workplace\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Test\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'test\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// more</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// src/common/menu.js\nconst menuData = [{\n  name: 'dashboard',\n  icon: 'dashboard',  // https://demo.com/icon.png or <Icon type=\"dashboard\" />\n  path: 'dashboard',\n  children: [{\n    name: 'Analysis',\n    path: 'analysis',\n  }, {\n    name: 'Monitor',\n    path: 'monitor',\n  }, {\n    name: 'Workplace',\n    path: 'workplace',\n  }, {\n    name: 'Test',\n    path: 'test',\n  }],\n}, {\n  // more\n}];"]],["p","The corresponding route and menu will be generated automatically."],["h3","New Layout"],["p","If the layout can not meet your demands, you should build your own. Suppose there are two new pages that need to use a new template, first you need to add new setting about route and menu:"],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/router.js</span>\n<span class="token string">\'/new\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'monitor\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../layouts/NewLayout\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token string">\'/new/page1\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'monitor\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/New/Page1\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token string">\'/new/page2\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'monitor\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/New/Page2\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>'},["code","// src/common/router.js\n'/new': {\n  component: dynamicWrapper(app, ['monitor'], () => import('../layouts/NewLayout')),\n},\n'/new/page1': {\n  component: dynamicWrapper(app, ['monitor'], () => import('../routes/New/Page1')),\n},\n'/new/page2': {\n  component: dynamicWrapper(app, ['monitor'], () => import('../routes/New/Page2')),\n},"]],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/menu.js</span>\n<span class="token keyword">const</span> menuData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'New Layout\'</span><span class="token punctuation">,</span>\n  icon<span class="token punctuation">:</span> <span class="token string">\'table\'</span><span class="token punctuation">,</span>\n  path<span class="token punctuation">:</span> <span class="token string">\'new\'</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Page1\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'page1\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Page2\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'page2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// more</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// src/common/menu.js\nconst menuData = [{\n  name: 'New Layout',\n  icon: 'table',\n  path: 'new',\n  children: [{\n    name: 'Page1',\n    path: 'page1',\n  }, {\n    name: 'Page2',\n    path: 'page2',\n  }],\n}, {\n  // more\n}];"]],["p","Add the new layout to root routes:"],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/router.js</span>\n<span class="token operator">&lt;</span>Router history<span class="token operator">=</span><span class="token punctuation">{</span>history<span class="token punctuation">}</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>Switch<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/new"</span> render<span class="token operator">=</span><span class="token punctuation">{</span>props <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>NewLayout <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/user"</span> render<span class="token operator">=</span><span class="token punctuation">{</span>props <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>UserLayout <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/"</span> render<span class="token operator">=</span><span class="token punctuation">{</span>props <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>BasicLayout <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Switch<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>'},["code",'// src/router.js\n<Router history={history}>\n  <Switch>\n    <Route path="/new" render={props => <NewLayout {...props} />} />\n    <Route path="/user" render={props => <UserLayout {...props} />} />\n    <Route path="/" render={props => <BasicLayout {...props} />} />\n  </Switch>\n</Router>']],["p","Now you can build the routes list in your new template follow the way of ",["code","src/layouts/BasicLayout.js"]," or ",["code","src/layouts/UserLayout.js"],"."],["h3","Route/menu With Params"],["p","You can add a route/menu path with params like this:"],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/router.js</span>\n<span class="token string">\'/dashboard/:workplace\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'chart\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/Dashboard/Workplace\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token string">\'/:list/table-list\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'rule\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/List/TableList\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>'},["code","// src/common/router.js\n'/dashboard/:workplace': {\n  component: dynamicWrapper(app, ['chart'], () => import('../routes/Dashboard/Workplace')),\n},\n'/:list/table-list': {\n  component: dynamicWrapper(app, ['rule'], () => import('../routes/List/TableList')),\n},"]],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/menu.js</span>\n<span class="token keyword">const</span> menuData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  icon<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  path<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Analysis\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'analysis\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Monitor\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'monitor\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Workplace\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\':workplace\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'List\'</span><span class="token punctuation">,</span>\n  icon<span class="token punctuation">:</span> <span class="token string">\'table\'</span><span class="token punctuation">,</span>\n  path<span class="token punctuation">:</span> <span class="token string">\':list\'</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// more</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// src/common/menu.js\nconst menuData = [{\n  name: 'dashboard',\n  icon: 'dashboard',\n  path: 'dashboard',\n  children: [{\n    name: 'Analysis',\n    path: 'analysis',\n  }, {\n    name: 'Monitor',\n    path: 'monitor',\n  }, {\n    name: 'Workplace',\n    path: ':workplace',\n  }],\n}, {\n  name: 'List',\n  icon: 'table',\n  path: ':list',\n  children: [],\n}, {\n  // more\n}];"]],["h3","Nested Layout"],["p","Sometimes we need to nest other templates in the current layout, for example, there are several pages that need to display the same module, you can extract this part and turn it into a new layout, and build a routes list in it. In this case you do not need to add it to the root routes, that's different from ",["a",{title:null,href:"/docs/router-and-nav#New Layout"},"New Layout"],". For details, please refer to the config setting of /list/search in",["code","src/common/router.js"]," and relevant files."],["h3","Render Nested Route"],["p","We use ",["code","getRoutes"]," to deal with routerData to generate routes list by default, according to the ",["a",{title:null,href:"/docs/router-and-nav#Routes"},"algorithms"],", only the nearest routing level under the current match.path will be kept. If you need to render a deeper level route(For instance: render ",["code","/list/search"]," and ",["code","/list/search/projects"]," at the same level), you need to get the route data manually and add it to the proper place."],["pre",{lang:"jsx",highlighted:'<span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* src/layouts/BasicLayout.js as your wrapper component */</span><span class="token punctuation">}</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token punctuation">:</span> <span class="token string">\'24px 24px 0\'</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> minHeight<span class="token punctuation">:</span> <span class="token string">\'calc(100vh - 260px)\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* default routes list, do not contain /list/search/projects */</span><span class="token punctuation">}</span>\n      <span class="token punctuation">{</span>\n        <span class="token function">getRoutes</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>path<span class="token punctuation">,</span> routerData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span>\n            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>key<span class="token punctuation">}</span></span>\n            <span class="token attr-name">path</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path<span class="token punctuation">}</span></span>\n            <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>component<span class="token punctuation">}</span></span>\n            <span class="token attr-name">exact</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>exact<span class="token punctuation">}</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* /list/search/projects added */</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">exact</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/list/search/projects<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>routerData<span class="token punctuation">[</span><span class="token string">\'/list/search/projects\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>component<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span> <span class="token attr-name">exact</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/dashboard/analysis<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>NotFound<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Content</span><span class="token punctuation">></span></span>'},["code","{/* src/layouts/BasicLayout.js as your wrapper component */}\n<Content style={{ margin: '24px 24px 0', height: '100%' }}>\n  <div style={{ minHeight: 'calc(100vh - 260px)' }}>\n    <Switch>\n      {/* default routes list, do not contain /list/search/projects */}\n      {\n        getRoutes(match.path, routerData).map(item => (\n          <Route\n            key={item.key}\n            path={item.path}\n            component={item.component}\n            exact={item.exact}\n          />\n        ))\n      }\n      {/* /list/search/projects added */}\n      <Route exact path=\"/list/search/projects\" component={routerData['/list/search/projects'].component} />\n      <Redirect exact from=\"/\" to=\"/dashboard/analysis\" />\n      <Route render={NotFound} />\n    </Switch>\n  </div>\n</Content>"]],["p","If there is a nested layout to be rendered, you need to remove the duplicated route in it."],["pre",{lang:"jsx",highlighted:'<span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* src/routes/List/List.js the nested layout */</span><span class="token punctuation">}</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">{</span>\n    <span class="token function">getRoutes</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>path<span class="token punctuation">,</span> routerData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token string">\'/list/search/projects\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span>\n      <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span>\n          <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>key<span class="token punctuation">}</span></span>\n          <span class="token attr-name">path</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path<span class="token punctuation">}</span></span>\n          <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>component<span class="token punctuation">}</span></span>\n          <span class="token attr-name">exact</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>exact<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>'},["code","{/* src/routes/List/List.js the nested layout */}\n<Switch>\n  {\n    getRoutes(match.path, routerData).filter(item => item.path !== '/list/search/projects').map(item =>\n      (\n        <Route\n          key={item.key}\n          path={item.path}\n          component={item.component}\n          exact={item.exact}\n        />\n      )\n    )\n  }\n</Switch>"]],["blockquote",["p","If most of the routes in your project need to be rendered at the same level, you can remove the getRoutes calling. "]],["h3","Hide Menu Item"],["p","You can add ",["code","hideInMenu"]," to the item that you want to hide."],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/menu.js</span>\n<span class="token keyword">const</span> menuData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  icon<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  path<span class="token punctuation">:</span> <span class="token string">\'dashboard\'</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Analysis\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'analysis\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Monitor\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'monitor\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Workplace\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'workplace\'</span><span class="token punctuation">,</span>\n    hideInMenu<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// hidden</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'Form\'</span><span class="token punctuation">,</span>\n  icon<span class="token punctuation">:</span> <span class="token string">\'form\'</span><span class="token punctuation">,</span>\n  path<span class="token punctuation">:</span> <span class="token string">\'form\'</span><span class="token punctuation">,</span>\n  hideInMenu<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// hidden</span>\n  children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Basic Form\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'basic-form\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Step Form\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'step-form\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Advanced Form\'</span><span class="token punctuation">,</span>\n    path<span class="token punctuation">:</span> <span class="token string">\'advanced-form\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// more</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// src/common/menu.js\nconst menuData = [{\n  name: 'dashboard',\n  icon: 'dashboard',\n  path: 'dashboard',\n  children: [{\n    name: 'Analysis',\n    path: 'analysis',\n  }, {\n    name: 'Monitor',\n    path: 'monitor',\n  }, {\n    name: 'Workplace',\n    path: 'workplace',\n    hideInMenu: true,  // hidden\n  }],\n}, {\n  name: 'Form',\n  icon: 'form',\n  path: 'form',\n  hideInMenu: true,  // hidden\n  children: [{\n    name: 'Basic Form',\n    path: 'basic-form',\n  }, {\n    name: 'Step Form',\n    path: 'step-form',\n  }, {\n    name: 'Advanced Form',\n    path: 'advanced-form',\n  }],\n}, {\n  // more\n}];"]],["h3","Hide Breadcrumb Item"],["p","You can add ",["code","hideInBreadcrumb"]," to the item that you want to hide."],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// src/common/router.js</span>\n<span class="token string">\'/dashboard/analysis\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'chart\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/Dashboard/Analysis\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  hideInBreadcrumb<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// hidden</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token string">\'/dashboard/monitor\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  component<span class="token punctuation">:</span> <span class="token function">dynamicWrapper</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'monitor\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'../routes/Dashboard/Monitor\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>'},["code","// src/common/router.js\n'/dashboard/analysis': {\n  component: dynamicWrapper(app, ['chart'], () => import('../routes/Dashboard/Analysis')),\n  hideInBreadcrumb: true,  // hidden\n},\n'/dashboard/monitor': {\n  component: dynamicWrapper(app, ['monitor'], () => import('../routes/Dashboard/Monitor')),\n},"]],["h2","FAQ"],["h3","Some of my route items were lost?"],["p","We use ",["a",{title:null,href:"https://github.com/ant-design/ant-design-pro/blob/master/src/utils/utils.js"},"getRoutes"]," to deal with the route data by default, for route path like ",["code","/ant-design/ant-design-pro"],", we defaults that you want it to be rendered in ",["code","/ant-design"],"(if exists), so ",["code","/ant-design/ant-design-pro"]," will not be rendered at the same level of ",["code","/ant-design"],". If you need to render them at the same place, please refer to ",["a",{title:null,href:"/docs/router-and-nav#Render Nested Route"},"Render Nested Route"],"."],["h3",["code","Link"]," to"],["p","The ",["code","to"]," property turns to be required in ",["code","react-router@4"],", and there will be lots of errors and warnings if it is undefined, so pay attention. Docs and issues:"],["ul",["li",["p",["a",{title:null,href:"https://reacttraining.com/react-router/web/api/Link"},"react-router@4 Link"]]],["li",["p",["a",{title:null,href:"https://github.com/ReactTraining/react-router/pull/5271"},"discussion"]]]],["h3","About dynamicWrapper"],["pre",{lang:"js",highlighted:'<span class="token keyword">import</span> dynamic <span class="token keyword">from</span> <span class="token string">\'dva/dynamic\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// wrapper of dynamic</span>\n<span class="token keyword">const</span> dynamicWrapper <span class="token operator">=</span> <span class="token punctuation">(</span>app<span class="token punctuation">,</span> models<span class="token punctuation">,</span> component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  app<span class="token punctuation">,</span>\n  <span class="token comment" spellcheck="true">// eslint-disable-next-line no-underscore-dangle</span>\n  models<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> models<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>m <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">!</span>app<span class="token punctuation">.</span>_models<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> namespace <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> namespace <span class="token operator">===</span> m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>m <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`../models/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>m<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment" spellcheck="true">// add routerData prop</span>\n  component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> routerData <span class="token operator">=</span> <span class="token function">getRouterData</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">component</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> Component <span class="token operator">=</span> raw<span class="token punctuation">.</span><span class="token keyword">default</span> <span class="token operator">||</span> raw<span class="token punctuation">;</span>\n      <span class="token keyword">return</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> routerData<span class="token operator">=</span><span class="token punctuation">{</span>routerData<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","import dynamic from 'dva/dynamic';\n\n// wrapper of dynamic\nconst dynamicWrapper = (app, models, component) => dynamic({\n  app,\n  // eslint-disable-next-line no-underscore-dangle\n  models: () => models.filter(m => !app._models.some(({ namespace }) => namespace === m)).map(m => import(`../models/${m}.js`)),\n  // add routerData prop\n  component: () => {\n    const routerData = getRouterData(app);\n    return component().then((raw) => {\n      const Component = raw.default || raw;\n      return props => <Component {...props} routerData={routerData} />;\n    });\n  },\n});"]],["p","We wrapped ",["code","dva/dynamic"]," for code simplicity, and it is important to note that here we use dynamic ",["code","import"]," of ",["a",{title:null,href:"https://webpack.js.org/guides/code-splitting/"},"Webpack Code Splitting"],", the ",["code","Promise"]," dynamic loading has been wrapped up by ",["code","dynamic"]," of ",["code","dva"],", so we can use it directly."]],meta:{order:3,title:"Router and Nav",type:"Introduction",filename:"docs/router-and-nav.en-US.md"},description:["section",["p","Routes and menus are the key skeletons of an application, we provide some basic tools and templates to help you build your own routes/menus more easily."],["p","If you want to know more about ",["code","browserHistory"]," and ",["code","hashHistory"],", see ",["a",{title:null,href:"/docs/deploy"},"deploy"],"."],["blockquote",["p","Note: Our scaffold relys on ",["code","dva@2"],", thus the routing is based on ",["code","react-router@4"],", in which the API is quite different from that before, here are some references of basic knowledge:"],["ul",["li",["p",["a",{title:null,href:"https://reacttraining.com/react-router/web/guides/philosophy"},"react-router"]]],["li",["p",["a",{title:null,href:"https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/guides/migrating.md"},"Migrating from v2/v3 to v4"]]],["li",["p",["a",{title:null,href:"https://github.com/sorrycc/blog/issues/48"},"dva@2.0"]]],["li",["p",["a",{title:null,href:"https://webpack.js.org/guides/code-splitting/"},"Webpack Code Splitting"]]]]]],toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#Basic-Structure",title:"Basic Structure"},"Basic Structure"]],["li",["a",{className:"bisheng-toc-h2",href:"#Examples",title:"Examples"},"Examples"]],["li",["a",{className:"bisheng-toc-h2",href:"#FAQ",title:"FAQ"},"FAQ"]]]}}});